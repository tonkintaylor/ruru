name: CI
permissions:
  contents: read
  pull-requests: write
on:
  workflow_dispatch:
  push:
    branches: ['main']
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - 'mkdocs.yml'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - 'mkdocs.yml'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    env:
      PYTHONIOENCODING: utf-8
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup git user config
        run: |
          git config --global user.name placeholder
          git config --global user.email placeholder@example.com

      - name: Set up uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
        with:
          version: ${{ matrix.uv-version }}
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Setup dependencies
        run: |
          uv python pin ${{ matrix.python-version }}
          uv export --no-managed-python --no-group doc --resolution ${{ matrix.resolution }} > ci-requirements.txt 
          uv pip install --system -r ci-requirements.txt

      - name: Run pre-commit
        if: matrix.pre-commit
        run: |
          uv run --frozen pre-commit run --all-files

      - name: Run pytest
        uses: pavelzw/pytest-action@510c5e90c360a185039bea56ce8b3e7e51a16507 # v2.2.0
        if: matrix.pytest
        with:
          custom-arguments: --cov --junitxml=junit.xml -o junit_family=legacy

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        uv-version: ["latest"]
        resolution: ["highest"]
        pre-commit: [true]
        pytest: [true]
        include:
          - os: "ubuntu-latest"
            python-version: "3.10"
            uv-version: "0.6.8" # Sync with pyproject.toml
            resolution: "lowest-direct"
            pre-commit: false
            pytest: true
