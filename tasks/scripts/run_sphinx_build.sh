#!/bin/bash

source ./tasks/shims/activate_venv

output=$(uv pip show sphinx &> /dev/null)
if [ $? -eq 0 ]
then
    echo "Building Sphinx docs..."

    if [ -f ".venv/Scripts/sphinx-build" ]
    then
        sphinxbuild=".venv/Scripts/sphinx-build"
    elif [ -f ".venv/bin/sphinx-build" ]
    then
        sphinxbuild=".venv/bin/sphinx-build"
    else
        echo "Error: Could not find the sphinx-build script for the virtual environment."
        exit 1
    fi

    if [ -f ".venv/Scripts/sphinx-apidoc" ]
    then
        sphinxapidoc=".venv/Scripts/sphinx-apidoc"
    elif [ -f ".venv/bin/sphinx-apidoc" ]
    then
        sphinxapidoc=".venv/bin/sphinx-apidoc"
    else
        echo "Error: Could not find the sphinx-apidoc script for the virtual environment."
        exit 1
    fi

    # We run a build to update the version number generated by setuptools_scm
    echo "Building python project for version number..."

    source ./tasks/shims/run_build

    # Clear the _apidoc (auto-generated)
    if ! rm -rf ./doc/source/_apidoc
    then
        echo "Error: Failed to clear cached Sphinx API Doc at doc/source/_apidoc !"
        exit 1
    fi

    # Iterate through directories in src/ and check if they contain a __init__.py file
    # If they do, then build the Sphinx API Doc for that directory
    export SPHINX_APIDOC_OPTIONS=members,show-inheritance
    for dir in src/*
    do
        # Skip non-directories, i.e. files
        if [ ! -d "$dir" ]
        then
            continue
        fi

        # Skip the scripts and notebooks directories
        if [ "$dir" == "src/scripts" ] || [ "$dir" == "src/notebooks" ] || [ "$dir" == "src/archive" ]
        then
            continue
        fi

        # Also skip if the directory contains a ".nosphinx" file
        if [ -f "$dir/.nosphinx" ]
        then
            continue
        fi

        output=$($sphinxapidoc --force --separate --no-toc --implicit-namespaces -o doc/source/_apidoc $dir)
        if [ $? -ne 0 ]
        then
            echo $output
            echo "Error: Failed to build Sphinx API Doc at doc/source/_apidoc !"
            exit 1
        fi
    done

    # Clear the doctrees (auto-generated)
    if ! rm -rf ./doc/build/doctrees
    then
        echo "Error: Failed to clear cached Sphinx doctrees at doc/build/doctrees !"
        exit 1
    fi

    # Build the Sphinx docs (locally)
    # Note; don't use -j auto since this is incompatible with rst2pdf
    output=$($sphinxbuild -M html doc/source doc/build -E -a -T -W --keep-going)
    if [ $? -ne 0 ]
    then
        echo $output
        echo "Error: Failed to build Sphinx HTML Docs at doc/build !"
        exit 1
    fi

    # Also don't need a fresh env with -E; we just made one in the previous line.
    output=$($sphinxbuild -M pdf doc/source doc/build -T -W --keep-going)
    if [ $? -ne 0 ]
    then
        echo $output
        echo "Error: Failed to build Sphinx PDF Docs at doc/build !"
        exit 1
    fi

    echo "Built Docs!"
fi
